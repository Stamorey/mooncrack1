_G.Settings = {
    iron = {
        enabled = false,
        colour = Color3.fromRGB(199, 172, 120),
    },
    nitrate = {
        enabled = true,
        colour = Color3.fromRGB(248, 248, 248),
    },
    stone = {
        enabled = false,
        colour = Color3.fromRGB(205, 205, 205),
    },
}

--//Ignore below (unless ur tryna skid lol)
if game.PlaceId ~= 9570110925 then
    print("Incorrect Game")
    return
end
repeat
    task.wait()
until game:IsLoaded()
local settings = _G.Settings
if settings == nil then
    return
end
local function get_text(text, position)
    local distance = math.floor((position - workspace.Ignore.LocalCharacter.Middle.Position).Magnitude)
    local final_text = tostring(text) .. " [" .. tostring(distance) .. "]"
    return tostring(final_text)
end
local function worldtoviewport(position)
    local a, b = workspace.CurrentCamera:WorldToViewportPoint(position)
    return Vector2.new(a.X, a.Y), b
end
local function add_esp(part, text, colour, toggle)
    if not toggle then
        return
    end
    local drawing_text = Drawing.new("Text")
    drawing_text.Outline = true
    drawing_text.Center = true
    drawing_text.Visible = false
    drawing_text.Font = 2
    drawing_text.Size = 13
    drawing_text.Color = colour
    local rendersteploop =
        game:GetService("RunService").Stepped:connect(
        function()
            pcall(
                function()
                    if not part:IsDescendantOf(workspace) or not settings then
                        drawing_text:Remove()
                        rendersteploop:Disconnect()
                    end
                    local part_pos = part.Position
                    local screen_pos, on_screen = worldtoviewport(part_pos)
                    if not on_screen then
                        drawing_text.Visible = false
                        rendersteploop:Disconnect()
                    end
                    drawing_text.Visible = true
                    drawing_text.Text = get_text(text, part_pos)
                    drawing_text.Position = screen_pos
                    rendersteploop:Disconnect()
                end
            )
        end
    )
end
local function filter_models(v)
    if (not v:IsA("Model")) then
        return
    end
    local is_part = v:FindFirstChild("Part")
    local children = v:GetChildren()
    local child_amount = #children
    if is_part then
        if child_amount == 1 then
            add_esp(is_part, "Stone", settings.stone.colour, settings.stone.enabled)
        elseif child_amount == 2 then
            for _, v in pairs(children) do
                local brickcolor = v.BrickColor
                local is_ore = v.ClassName == "MeshPart" and v.Name == "Part"
                if is_ore then
                    if brickcolor == BrickColor.new("Institutional white") then
                        add_esp(v, "Nitrate", settings.nitrate.colour, settings.nitrate.enabled)
                    elseif brickcolor == BrickColor.new("Burlap") then
                        add_esp(v, "Iron", settings.iron.colour, settings.iron.enabled)
                    end
                end
            end
        end
    end
end
for index, model in pairs(workspace:GetChildren()) do
    filter_models(model)
end
workspace.ChildAdded:Connect(
    function(model)
        filter_models(model)
    end
)
